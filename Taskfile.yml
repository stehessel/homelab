version: "3"

includes:
  terraform:
    dir: ./terraform/hetzner
    taskfile: ./terraform/hetzner

tasks:
  hetzner:snapshot:
    cmds:
      - curl -sL https://raw.githubusercontent.com/kube-hetzner/terraform-hcloud-kube-hetzner/master/packer-template/hcloud-microos-snapshots.pkr.hcl -o "hcloud-microos-snapshots.pkr.hcl"
      - cmd: packer build hcloud-microos-snapshots.pkr.hcl
        ignore_error: true
    desc: Build MicroOS snapshots

  crds:install:
    cmds:
      - kubectl apply -f https://github.com/VictoriaMetrics/operator/releases/download/v0.33.0/crd.yaml
    desc: Install CRDs

  flux:bootstrap:
    cmds:
      - flux bootstrap github
        --owner=stehessel
        --repository=homelab
        --path=flux/clusters/k3s
        --branch=master
        --personal
        --token-auth
    desc: Bootstrap fluxcd

  flux:sops:
    cmds:
      - sops --decrypt --extract '["flux"]["sops"]' ./terraform/hetzner/secrets/base.yaml | kubectl apply -f -
    desc: Create fluxcd SOPS secret

  flux:upgrade:
    cmds:
      - flux install --export > ./flux/clusters/k3s/flux-system/gotk-components.yaml
    desc: Upgrade fluxcd

  cilium:install:
    cmds:
      - helm uninstall cilium -n kube-system
      - kubectl wait --for=delete namespace cilium-secrets --timeout=60s
      - helm upgrade cilium cilium/cilium --install --version 1.13.2 --namespace kube-system --set kubeProxyReplacement=strict --set devices='eth1' --set hubble.relay.enabled=true  --set hubble.ui.enabled=true --set gatewayAPI.enabled=true --set ipam.operator.clusterPoolIPv4PodCIDRList="10.42.0.0/16" --set ipam.operator.clusterPoolIpv6PodCIDRList="fd42::/48" --set operator.replicas=1 --set ipv6.enabled=true --set prometheus.enabled=true --set operator.prometheus.enabled=true --set hubble.metrics.enableOpenMetrics=true --set hubble.metrics.enabled="{dns,drop,tcp,flow,port-distribution,icmp,httpV2:exemplars=true;labelsContext=source_ip\,source_namespace\,source_workload\,destination_ip\,destination_namespace\,destination_workload\,traffic_direction}"
    desc: Install Cilium

  contour:install:
    cmds:
      - kubectl apply -f https://projectcontour.io/quickstart/contour-gateway-provisioner.yaml
      - kubectl apply -f ./flux/infrastructure/services/gateway/contour.yaml
    desc: Install Contour

  istio:install:
    cmds:
      - istioctl install --set profile=minimal -y
    desc: Install Istio with minimal capabilities

  up:
    cmds:
      - task: hetzner:snapshot
      - task: terraform:init
      - task: terraform:apply
      - task: crds:install
      - task: flux:bootstrap
      - task: flux:sops
      # - task: cilium:install
      # - task: contour:install
      - task: istio:install
    desc: Turn up the cluster and bootstrap fluxcd

  destroy:
    aliases: [down]
    deps:
      - terraform:destroy
    desc: Destroy the cluster
